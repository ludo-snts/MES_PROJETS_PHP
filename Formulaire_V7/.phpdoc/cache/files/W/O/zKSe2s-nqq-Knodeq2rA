1712173842
waR3U4bTeM%3A2adc53028e9f6037f28e626bb2982e07-49135d62e799c0b5e9ef0d6fc0edb9d9
s:23408:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"49135d62e799c0b5e9ef0d6fc0edb9d9";s:39:" phpDocumentor\Reflection\Php\File name";s:14:"Controleur.php";s:39:" phpDocumentor\Reflection\Php\File path";s:25:"controleur/Controleur.php";s:41:" phpDocumentor\Reflection\Php\File source";s:13448:"<?php

// NAMESPACE
namespace controleur;
//USE ... AS
use modele\entite\Personne as Personne;
use modele\entite\Genre as Genre;
use modele\entite\Role as Role;
use modele\service\PersonneService as PersonneService;
use modele\service\GenreService as GenreService;
use modele\service\RoleService as RoleService;
use modele\service\exception\ExceptionService as ExceptionService;
//AUTOLOADER
require_once '../autoloader.php';


// Initialisation de la session
session_name('myid');
session_start();

// Initialisation de la langue utilisée
if (!isset($_SESSION['language'])) {
    $language = 'fr';
} else {
    $language = $_SESSION['language'];
}
// INCLUDE FICHIER LOCAL/LANGUAGE
include('../vue/LOCAL/' . $language . '.php');



// Initialisation des variables
if(isset($_GET['action'])) :
    switch ($_GET['action']) {

        // Chemin : Aller page = ACCUEIL = OK
        case 'alleraccueil':
            $_SESSION['currentpage'] = 'Accueil.php';
            unset($_SESSION['message']);
            $message = "";
            try {
                header('Location: ../vue/Accueil.php');
            } catch (\Exception $e) {
                $_SESSION['message'] = "ALLER PAGE ACCUEIL : KO";
                header('location: ../vue/Message_Error.php');
                die();
            }
        break;

        // Chemin : Aller page = LOGIN = OK
        case 'allerlogin':
            $_SESSION['currentpage'] = 'Login.php';
            unset($_SESSION['message']);
            $message = "";
            try {
                header('Location: ../vue/Login.php');
            } catch (\Exception $e) {
                $_SESSION['message'] = "ALLER PAGE LOGIN : KO";
                header('location: ../vue/Message_Error.php');
                die();
            }
        break;

        // Chemin : Aller page = CREER PERSONNE = OK
        case 'allercreerpersonne':
            $_SESSION['currentpage'] = 'Creer_personne.php';
            unset($_SESSION['message']);
            $message = "";
            try {
                $hgenreService = new GenreService();
                $tab_genres = $hgenreService->afficher();
                $_SESSION['genres'] = $tab_genres;
                $hroleService = new RoleService();
                $tab_roles = $hroleService->afficher();
                $_SESSION['roles'] = $tab_roles;
                header('Location: ../vue/Creer_personne.php');
            } catch (\Exception $e) {
                $_SESSION['message'] = "ALLER PAGE CREER PERSONNE : KO";
                header('location: ../vue/Message_Error.php');
                die();
            }
        break;

        case 'allerafficherpersonne':
            $_SESSION['currentpage'] = 'Afficher_personne.php';
            unset($_SESSION['message']);
            $message = "";
            try {
                $hpersonneService = new PersonneService();                
                $resultat = $hpersonneService->afficher();
                if ($resultat !== "") {
                    $_SESSION['personnes'] = $resultat;
                    header('Location: ../vue/Afficher_personne.php');
                } else {
                    $_SESSION['message'] = $languageArray['DB_access_broken'];
                    header('location: ../vue/Accueil.php');
                }
            } catch (\Exception $e) {
                $_SESSION['message'] = "ALLER PAGE AFFICHER PERSONNE : KO";
                header('location: ../vue/Message_Error.php');
                die();
            }
        break;

        // Chemin : Aller page = MODIFIER PERSONNE = OK
        case 'allermodifierpersonne':
            $_SESSION['currentpage'] = 'Modifier_personne.php';
            unset($_SESSION['message']);
            $message = "";
            try {
                header('Location: ../vue/Modifier_personne.php');
            } catch (\Exception $e) {
                $_SESSION['message'] = "ALLER PAGE MODIFIER PERSONNE : KO";
                header('location: ../vue/Message_Error.php');
                die();
            }
        break;

        // CHANGEMENT LANGUE = OK
        case 'changerlangue':
            try {
                // echo 'changement langue OK : '.$_GET['languageId'];
                if (!isset($_GET['languageId']))
                    $language = 'fr';
                else
                    $language = $_GET['languageId'];
                include('../vue/LOCAL/'.$language.'.php');
                $_SESSION['language'] = $_GET['languageId'];

                $language = $_SESSION['language'];
                setcookie('language', $language, time() +24*3600, '/', '', true, true);

                $currentpage = $_SESSION['currentpage'];
                header("Location: ../vue/$currentpage");
            } catch (\Exception $e) {
                $_SESSION['message'] = "MODIFIER LANGUE : KO";
                header('location: ../vue/Message_Error.php');
                die();
            }
        break;

        // CRUD : CREER UNE PERSONNE (CREATE) = OK
        case "creerpersonne":
            $_SESSION['currentpage'] = 'Creer_personne.php';
            unset($_SESSION['message']);
            $message = "";
            // SI VERIFIER VALUES CHAMPS = KO
            if ( !verifier ($_POST["prenom"]) || !verifier ($_POST["nom"]) || !verifier ($_POST["mail"]) || !verifier ($_POST["age"]) ||!verifier ($_POST["genre"]) || !verifier ($_POST["role"]) || !verifier ($_POST["username"]) || !verifier ($_POST["password"]) ) {
                $message = $languageArray['create_message_error'];
                // if (!empty($message)) {
                    $_SESSION['message'] = $message;
                    header('location: ../vue/Creer_personne.php');
                // }
            }        
            // SI VERIFIER VALUES CHAMPS = OK      
            else {
                $hpersonne = new Personne();
                // NETTOYER VALUES CHAMPS
                $hpersonne->setPrenom(nettoyer($_POST["prenom"]));
                $hpersonne->setNom(nettoyer($_POST["nom"]));
                $hpersonne->setMail(nettoyer($_POST["mail"]));
                $hpersonne->setAge(nettoyer($_POST["age"]));

                $hgenre = new Genre();

                $hgenre->setId(($_POST["genre"]));
                $hpersonne->setGenre($hgenre);

                $hrole = new Role();

                $hrole->setId(($_POST["role"]));
                $hpersonne->setRole($hrole);

                $hpersonne->setUsername(nettoyer($_POST["username"]));
                // password_hash permet de hasher le mot de passe avant de l'enregistrer dans la base de données
                // PASSWORD_DEFAULT est une constante qui permet de choisir le meilleur algorithme de hashage
                $hpersonne->setPassword(password_hash($_POST["password"],PASSWORD_DEFAULT));
                // $hpersonne->setPassword(nettoyer($_POST["password"]));
            }
            try {
                $hpersonneService = new PersonneService();
                $resultat = $hpersonneService->creer($hpersonne);
                if ($resultat == 1) {
                    $_SESSION['message'] = $languageArray['create_message_success'];
                    header('location: ../vue/Creer_personne.php');
                } else {
                    $_SESSION['message'] = $languageArray['create_message_error_2'];
                    header('location: ../vue/Accueil.php');
                }
            } catch (ExceptionService $e) {
                $_SESSION['message'] = 'Controleur : CREER : KO';
                header('location: ../vue/Creer_personne.php');
                die();
            }
        break;

        // CRUD : AFFICHER UNE PERSONNE SELON SON ID (READ) = OK
        case 'afficherunepersonne':
            $_SESSION['currentpage'] = 'Modifier_personne.php';
            try {
                $hpersonneService = new PersonneService();
                $id = $_GET['id'];
                $personne = $hpersonneService->afficherUn($id);
                $_SESSION['personne'] = $personne;
                header('Location: ../vue/Modifier_personne.php');
            } catch (ExceptionService $e) {
                $_SESSION['message'] = 'Controleur : AFFICHER UN : KO';
                header('location: ../vue/Afficher_personne.php');
                die();
            }
        break;

        // CRUD : MODIFIER UNE PERSONNE SELON SON ID (UPDATE) = KO
        case 'modifierpersonne':
            $_SESSION['currentpage'] = 'Modifier_personne.php';
            unset($_SESSION['message']);
            $message = "";
            try {
                $hpersonneService = new PersonneService();
                $id = $_GET['id'];
                $personne = $hpersonneService -> modifier($id);
                $_SESSION['personne'] = $personne;
                // on recharge la liste des personnes (case allerafficherpersonne)
                $hpersonneService = new PersonneService();
                $tab_personnes = $hpersonneService->afficher();
                $_SESSION['personnes'] = $tab_personnes;
                $message = 'Controleur : MODIFIER : OK';
                $_SESSION['message'] = $message;
                header('Location: ../vue/Afficher_personne.php');
            } catch (ExceptionService $e) {
                $_SESSION['message'] = 'Controleur : MODIFIER : KO';
                header('location: ../vue/Afficher_personne.php');
                die();
            }
        break;

        // CRUD : SUPPRIMER UNE PERSONNE SELON SON ID (DELETE) = OK
        case 'supprimerpersonne':
            $_SESSION['currentpage'] = 'Afficher_personne.php';
            try {
                $hpersonneService = new PersonneService();
                $id = $_GET['id'];
                $hpersonneService->supprimer($id);
                // on recharge la liste des personnes (case allerafficherpersonne)
                $hpersonneService = new PersonneService();
                $tab_personnes = $hpersonneService->afficher();
                $_SESSION['personnes'] = $tab_personnes;
                $message = 'Controleur : SUPPRIMER : OK';
                $_SESSION['message'] = $message;
                header('Location: ../vue/Afficher_personne.php');
            } catch (ExceptionService $e) {
                $_SESSION['message'] = 'Controleur : SUPPRIMER : KO';
                header('location: ../vue/Afficher_personne.php');
                die();
            }
        break;

        // Chemin si problème : Aller page = ACCUEIL = OK
        default:
            $_SESSION['currentpage'] = 'Accueil.php';
            $_SESSION['language'] = $_GET['languageID'];
            try {
            header('Location: ../vue/Accueil.php');
            } catch (\Exception $e) {
                $_SESSION['message'] = "ALLER PAGE DEFAULT : KO";
                header('location: ../vue/Message_Error.php');
                die();
            }
        break;

        case 'connexionreussie' :
            $_SESSION['currentpage'] = 'Login.php';
            unset($_SESSION['message']);
            $message = "";
            if ($_POST['username']==='' || $_POST['password']==='') {
                $message = 'Controleur : CONNEXION (SAISIE INCOMPLETE) : KO';
                $_SESSION['message'] = $message;
                header('Location: ../vue/Login.php');
            }
            else {
                try {
                    $hpersonneService = new PersonneService();
                    $resultat = $hpersonneService->connecter();
                    if ($resultat == 1) { 
                        $_SESSION['personneconnectee'] = $resultat;
                        header('Location: ../vue/Accueil.php');
                    } else {
                        $_SESSION['message'] = 'Controleur : CONNEXION (CHAMP(S) INVALIDE(S)) : KO';
                        header('location: ../vue/Login.php');
                }
                } catch (\Exception $e) {
                    $_SESSION['message'] = 'Controleur : CONNEXION : KO';
                    header('location: ../vue/Login.php');
                    die();
                }
            }
        break;

        case 'deconnexion' :
            try {
                session_destroy();
                header( 'Location: ../vue/Login.php' );
            } catch (\Exception $e) {
                $_SESSION['message'] = 'Controleur : DECONNEXION : KO';
                header('location: ../vue/Message_Error.php');
                die();
            }
        break;

    }

endif;



// FONCTIONS
// Vérifier que les 'required' sont complétés = OK
function verifier($data) {
    if ((!isset($data) || empty($data)))
        return false;
    else
        return true;
}

// trim :  Supprimer les espaces en début et fin de chaîne = OK
// stripslashes : Supprimer les antislashs d'une chaîne = OK
// htmlspecialchars : Convertir les caractères spéciaux en entités HTML = OK
function nettoyer($data) {
    $data = trim($data);
    $data = stripslashes($data);
    $data = htmlspecialchars($data);
    return $data;
}";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:11:"\controleur";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:11:"\controleur";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"controleur";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:2:{s:22:"\controleur\verifier()";O:38:"phpDocumentor\Reflection\Php\Function_":8:{s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:22:"\controleur\verifier()";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"verifier";}s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"data";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:318;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:323;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}}s:22:"\controleur\nettoyer()";O:38:"phpDocumentor\Reflection\Php\Function_":8:{s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:22:"\controleur\nettoyer()";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"nettoyer";}s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:4:"data";s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:328;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:333;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";